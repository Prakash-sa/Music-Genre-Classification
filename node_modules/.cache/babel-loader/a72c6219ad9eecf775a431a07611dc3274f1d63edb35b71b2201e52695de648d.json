{"ast":null,"code":"var _jsxFileName = \"/Users/prakashsaini/Documents/React/react-web-audio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useState, useEffect } from 'react';\nimport AudioAnalyser from './AudioAnalyser';\nvar a;\nconst App = () => {\n  _s();\n  const [buttonName, setButtonName] = useState(\"Play\");\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const mediaRecorder = useRef(null);\n  const [audio, setAudio] = useState();\n  const [audior, setAudioR] = useState();\n  useEffect(() => {\n    if (a) {\n      a.pause();\n      a = null;\n      setButtonName(\"Play\");\n    }\n    if (audio) {\n      a = new Audio(audio);\n      a.onended = () => {\n        setButtonName(\"Play\");\n      };\n    }\n  }, [audio]);\n  const handleClick = () => {\n    if (buttonName === \"Play\") {\n      console.log(a);\n      a.play();\n      setButtonName(\"Pause\");\n    } else {\n      a.pause();\n      setButtonName(\"Play\");\n    }\n  };\n  const addFile = e => {\n    if (e.target.files[0]) {\n      setAudio(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const recorder = new MediaRecorder(stream);\n      setRecording(true);\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          const blob = new Blob([event.data], {\n            type: 'audio/wav'\n          });\n          setAudioBlob(blob);\n        }\n      };\n      recorder.onstop = () => {\n        setRecording(false);\n      };\n      recorder.start();\n      mediaRecorder.current = recorder;\n    }).catch(error => {\n      console.error('Error accessing the microphone:', error);\n    });\n  };\n  const stopRecording = () => {\n    if (mediaRecorder.current) {\n      mediaRecorder.current.stop();\n    }\n  };\n  const saveRecording = () => {\n    const url = URL.createObjectURL(audioBlob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'recorded-audio.wav';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  const getMicrophone = async () => {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    setAudioR(audio);\n  };\n  const stopMicrophone = () => {\n    audior.getTracks().forEach(track => track.stop());\n    setAudioR(null);\n  };\n  const toggleMicrophone = () => {\n    if (audior) {\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, buttonName), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: addFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleMicrophone(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, audior ? 'Stop microphone' : 'Get microphone input')), audior ? /*#__PURE__*/React.createElement(AudioAnalyser, {\n    audio: audior,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }) : '');\n};\n_s(App, \"247Y0BS7IeZy/BFELmHDyuI3wT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","useState","useEffect","AudioAnalyser","a","App","buttonName","setButtonName","recording","setRecording","audioBlob","setAudioBlob","mediaRecorder","useRef","audio","setAudio","audior","setAudioR","pause","Audio","onended","handleClick","console","log","play","addFile","e","target","files","URL","createObjectURL","startRecording","navigator","mediaDevices","getUserMedia","then","stream","recorder","MediaRecorder","ondataavailable","event","data","size","blob","Blob","type","onstop","start","current","catch","error","stopRecording","stop","saveRecording","url","document","createElement","href","download","body","appendChild","click","removeChild","getMicrophone","video","stopMicrophone","getTracks","forEach","track","toggleMicrophone"],"sources":["/Users/prakashsaini/Documents/React/react-web-audio/src/App.js"],"sourcesContent":["import React, { Component , useState, useEffect} from 'react';\nimport AudioAnalyser from './AudioAnalyser';\n\nvar a;\nconst App=()=> {\n  const [buttonName, setButtonName] = useState(\"Play\");\n\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const mediaRecorder = useRef(null);\n  const [audio, setAudio] = useState();\n  const [audior,setAudioR]=useState();\n\n  useEffect(() => {\n    if (a) {\n      a.pause();\n      a = null;\n      setButtonName(\"Play\");\n    }\n    if (audio) {\n      a = new Audio(audio);\n      a.onended = () => {\n        setButtonName(\"Play\");\n      };\n    }\n  }, [audio]);\n\n  const handleClick = () => {\n    if (buttonName === \"Play\") {\n      console.log(a)\n      a.play();\n      setButtonName(\"Pause\");\n    } else {\n      a.pause();\n      setButtonName(\"Play\");\n    }\n  };\n\n  const addFile = (e) => {\n    if (e.target.files[0]) {\n      setAudio(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n\n\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then((stream) => {\n        const recorder = new MediaRecorder(stream);\n        setRecording(true);\n\n        recorder.ondataavailable = (event) => {\n          if (event.data.size > 0) {\n            const blob = new Blob([event.data], { type: 'audio/wav' });\n            setAudioBlob(blob);\n          }\n        };\n\n        recorder.onstop = () => {\n          setRecording(false);\n        };\n\n        recorder.start();\n        mediaRecorder.current = recorder;\n      })\n      .catch((error) => {\n        console.error('Error accessing the microphone:', error);\n      });\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorder.current) {\n      mediaRecorder.current.stop();\n    }\n  };\n\n  const saveRecording = () => {\n    const url = URL.createObjectURL(audioBlob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'recorded-audio.wav';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  const getMicrophone=async()=> {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n\n    setAudioR(audio)\n  }\n\n  const stopMicrophone=()=> {\n    audior.getTracks().forEach(track => track.stop());\n    setAudioR(null)\n  }\n\n  const toggleMicrophone=()=> {\n    if (audior) {\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        <button onClick={handleClick}>{buttonName}</button>\n        <input type=\"file\" onChange={addFile} />\n        <div className=\"controls\">\n          <button onClick={()=>toggleMicrophone()}>\n            {audior ? 'Stop microphone' : 'Get microphone input'}\n          </button>\n        </div>\n        {audior ? <AudioAnalyser audio={audior} /> : ''}\n      </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}