{"ast":null,"code":"var _jsxFileName = \"/Users/prakashsaini/Documents/React/react-web-audio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useState, useEffect } from 'react';\nimport AudioAnalyser from './AudioAnalyser';\nconst App = () => {\n  _s();\n  const [buttonName, setButtonName] = useState(\"Play\");\n  const [audio, setAudio] = useState();\n  useEffect(() => {\n    if (a) {\n      a.pause();\n      a = null;\n      setButtonName(\"Play\");\n    }\n    if (audio) {\n      a = new Audio(audio);\n      a.onended = () => {\n        setButtonName(\"Play\");\n      };\n    }\n  }, [audio]);\n  const handleClick = () => {\n    if (buttonName === \"Play\") {\n      a.play();\n      setButtonName(\"Pause\");\n    } else {\n      a.pause();\n      setButtonName(\"Play\");\n    }\n  };\n  const addFile = e => {\n    if (e.target.files[0]) {\n      setAudio(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  const getMicrophone = async () => {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    setAudio(audio);\n  };\n  stopMicrophone = () => {\n    audio.getTracks().forEach(track => track.stop());\n    setAudio(null);\n  };\n  toggleMicrophone = () => {\n    if (audio) {\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleMicrophone(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, audio ? 'Stop microphone' : 'Get microphone input')), audio ? /*#__PURE__*/React.createElement(AudioAnalyser, {\n    audio: audio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }\n  }) : '');\n};\n_s(App, \"dD0MqAcT0yQokt1Nhx2DRAB2+WY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","useState","useEffect","AudioAnalyser","App","buttonName","setButtonName","audio","setAudio","a","pause","Audio","onended","handleClick","play","addFile","e","target","files","URL","createObjectURL","getMicrophone","navigator","mediaDevices","getUserMedia","video","stopMicrophone","getTracks","forEach","track","stop","toggleMicrophone"],"sources":["/Users/prakashsaini/Documents/React/react-web-audio/src/App.js"],"sourcesContent":["import React, { Component , useState, useEffect} from 'react';\nimport AudioAnalyser from './AudioAnalyser';\n\nconst App=()=> {\n  const [buttonName, setButtonName] = useState(\"Play\");\n\n  const [audio, setAudio] = useState();\n\n  useEffect(() => {\n    if (a) {\n      a.pause();\n      a = null;\n      setButtonName(\"Play\");\n    }\n    if (audio) {\n      a = new Audio(audio);\n      a.onended = () => {\n        setButtonName(\"Play\");\n      };\n    }\n  }, [audio]);\n\n  const handleClick = () => {\n    if (buttonName === \"Play\") {\n      a.play();\n      setButtonName(\"Pause\");\n    } else {\n      a.pause();\n      setButtonName(\"Play\");\n    }\n  };\n\n  const addFile = (e) => {\n    if (e.target.files[0]) {\n      setAudio(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n\n  const getMicrophone=async()=> {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    setAudio(audio)\n  }\n\n  stopMicrophone=()=> {\n    audio.getTracks().forEach(track => track.stop());\n    setAudio(null)\n  }\n\n  toggleMicrophone=()=> {\n    if (audio) {\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        <div className=\"controls\">\n          <button onClick={()=>toggleMicrophone()}>\n            {audio ? 'Stop microphone' : 'Get microphone input'}\n          </button>\n        </div>\n        {audio ? <AudioAnalyser audio={audio} /> : ''}\n      </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC7D,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,GAAG,GAAC,MAAK;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,MAAM,CAAC;EAEpD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EAEpCC,SAAS,CAAC,MAAM;IACd,IAAIO,CAAC,EAAE;MACLA,CAAC,CAACC,KAAK,EAAE;MACTD,CAAC,GAAG,IAAI;MACRH,aAAa,CAAC,MAAM,CAAC;IACvB;IACA,IAAIC,KAAK,EAAE;MACTE,CAAC,GAAG,IAAIE,KAAK,CAACJ,KAAK,CAAC;MACpBE,CAAC,CAACG,OAAO,GAAG,MAAM;QAChBN,aAAa,CAAC,MAAM,CAAC;MACvB,CAAC;IACH;EACF,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;EAEX,MAAMM,WAAW,GAAG,MAAM;IACxB,IAAIR,UAAU,KAAK,MAAM,EAAE;MACzBI,CAAC,CAACK,IAAI,EAAE;MACRR,aAAa,CAAC,OAAO,CAAC;IACxB,CAAC,MAAM;MACLG,CAAC,CAACC,KAAK,EAAE;MACTJ,aAAa,CAAC,MAAM,CAAC;IACvB;EACF,CAAC;EAED,MAAMS,OAAO,GAAIC,CAAC,IAAK;IACrB,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACrBV,QAAQ,CAACW,GAAG,CAACC,eAAe,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMG,aAAa,GAAC,YAAU;IAC5B,MAAMd,KAAK,GAAG,MAAMe,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MACtDjB,KAAK,EAAE,IAAI;MACXkB,KAAK,EAAE;IACT,CAAC,CAAC;IACFjB,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAEDmB,cAAc,GAAC,MAAK;IAClBnB,KAAK,CAACoB,SAAS,EAAE,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,EAAE,CAAC;IAChDtB,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAEDuB,gBAAgB,GAAC,MAAK;IACpB,IAAIxB,KAAK,EAAE;MACTmB,cAAc,EAAE;IAClB,CAAC,MAAM;MACLL,aAAa,EAAE;IACjB;EACF,CAAC;EAEC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAK,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB;IAAQ,OAAO,EAAE,MAAIU,gBAAgB,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrCxB,KAAK,GAAG,iBAAiB,GAAG,sBAAsB,CAC5C,CACL,EACLA,KAAK,gBAAG,oBAAC,aAAa;IAAC,KAAK,EAAEA,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,GAAG,EAAE,CACzC;AAEZ,CAAC;AAAA,GAlEKH,GAAG;AAAA,KAAHA,GAAG;AAoET,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}